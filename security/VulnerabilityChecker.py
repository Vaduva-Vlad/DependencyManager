import requests
import PackageReader

class VulnerabilityChecker:
    def __init__(self, project_path):
        self.project_path = project_path
        self.package_reader=PackageReader.PackageReader(self.project_path)

    def filter_results(self, vulnerabilities,package_list):
        result={}
        for vuln in range(len(vulnerabilities)):
            if len(list(vulnerabilities[vuln].keys()))!=0:
                result[package_list[vuln]]=vulnerabilities[vuln]
        return result

    def check_all_packages(self):
        packages=self.package_reader.read_installed_packages()
        package_list=list(packages.keys())
        params={"queries":[]}

        for package in package_list:
            param={
                    "package": {
                        "name": f"{package}",
                        "ecosystem": "PyPI"
                    },
                    "version": f"{packages[package]}"
                }
            params["queries"].append(param)

        url = "https://api.osv.dev/v1/querybatch"
        response = requests.post(url, json=params)
        vulnerabilities = response.json()
        vulnerabilities=self.filter_results(vulnerabilities['results'],package_list)
        return vulnerabilities

    def report_vulnerabilities(self, mode="all"):
        match mode:
            case "all":
                vulnerabilities = self.check_all_packages()
                if len(vulnerabilities)!=0:
                    print("One or more security vulnerabilities have been detected for the following packages: ")
                    print(list(vulnerabilities.keys()))

if __name__=="__main__":
    v=VulnerabilityChecker("C:/Users/vland/source/repos/depmanagertestproject")
    #print(v.check_all_packages())
    v.report_vulnerabilities()